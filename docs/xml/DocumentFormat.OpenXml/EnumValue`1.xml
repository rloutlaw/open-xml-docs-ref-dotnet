<Type Name="EnumValue&lt;T&gt;" FullName="DocumentFormat.OpenXml.EnumValue&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class EnumValue&lt;T&gt; : DocumentFormat.OpenXml.OpenXmlSimpleValue&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumValue`1&lt;struct .ctor (class System.ValueType) T&gt; extends DocumentFormat.OpenXml.OpenXmlSimpleValue`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.EnumValue`1" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumValue(Of T)&#xA;Inherits OpenXmlSimpleValue(Of T)" />
  <TypeSignature Language="F#" Value="type EnumValue&lt;'T (requires 'T : struct)&gt; = class&#xA;    inherit OpenXmlSimpleValue&lt;'T (requires 'T : struct)&gt;" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlSimpleValue&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{InnerText}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{InnerText}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">Every enum value must be an enum with the EnumStringValueAttribute object.</typeparam>
    <summary>
            Represents the enum value for attributes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.EnumValue`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the EnumValue class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumValue (DocumentFormat.OpenXml.EnumValue&lt;T&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.EnumValue`1&lt;!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.EnumValue`1.#ctor(DocumentFormat.OpenXml.EnumValue{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As EnumValue(Of T))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt; : DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt; -&gt; DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt;" Usage="new DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt; source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="DocumentFormat.OpenXml.EnumValue&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
            The source EnumValue class.
            </param>
        <summary>
            Initializes a new instance of the EnumValue by deep copying the supplied
            EnumValue class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumValue (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.EnumValue`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt; : 'T -&gt; DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt;" Usage="new DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
            The value of type T.
            </param>
        <summary>
            Initializes a new instance of the EnumValue class using the supplied
            value of type T.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator string (DocumentFormat.OpenXml.EnumValue&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Implicit(class DocumentFormat.OpenXml.EnumValue`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.EnumValue`1.op_Implicit(DocumentFormat.OpenXml.EnumValue{`0})~System.String" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As EnumValue(Of T)) As String" />
      <MemberSignature Language="F#" Value="static member op_Implicit : DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt; -&gt; string" Usage="DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt;.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="DocumentFormat.OpenXml.EnumValue&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <summary>
            Implicitly converts the specified value to a String value.
            </summary>
        <returns>The converted string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator T (DocumentFormat.OpenXml.EnumValue&lt;T&gt; xmlAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !T op_Implicit(class DocumentFormat.OpenXml.EnumValue`1&lt;!T&gt; xmlAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.EnumValue`1.op_Implicit(DocumentFormat.OpenXml.EnumValue{`0})~`0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (xmlAttribute As EnumValue(Of T)) As T" />
      <MemberSignature Language="F#" Value="static member op_Implicit : DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt; -&gt; 'T" Usage="DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt;.op_Implicit xmlAttribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlAttribute" Type="DocumentFormat.OpenXml.EnumValue&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="xmlAttribute">The EnumValue to convert.</param>
        <summary>
            Implicitly converts the specified value to an enum.
            </summary>
        <returns>
            The converted enum value.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator DocumentFormat.OpenXml.EnumValue&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class DocumentFormat.OpenXml.EnumValue`1&lt;!T&gt; op_Implicit(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.EnumValue`1.op_Implicit(`0)~DocumentFormat.OpenXml.EnumValue{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As T) As EnumValue(Of T)" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T -&gt; DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt;" Usage="DocumentFormat.OpenXml.EnumValue&lt;'T (requires 'T : struct)&gt;.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">The value with type T</param>
        <summary>Initializes a new EnumValue class by converting the supplied enum             value.</summary>
        <returns>A new EnumValue instance corresponding to the value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
