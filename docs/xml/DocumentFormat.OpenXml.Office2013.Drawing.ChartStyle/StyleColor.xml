<Type Name="StyleColor" FullName="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor">
  <TypeSignature Language="C#" Value="public class StyleColor : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StyleColor extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor" />
  <TypeSignature Language="VB.NET" Value="Public Class StyleColor&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type StyleColor = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(65, "styleClr")]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(65, "styleClr")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Defines the StyleColor Class.</para>
      <para>This class is available in Office 2013 or above.</para>
      <para>When the object is serialized out as xml, it's qualified name is cs:styleClr.</para>
    </summary>
    <remarks>
             The following table lists the possible child types:
             <list type="bullet"><item><description>DocumentFormat.OpenXml.Drawing.Tint &lt;a:tint&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Shade &lt;a:shade&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Complement &lt;a:comp&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Inverse &lt;a:inv&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Gray &lt;a:gray&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Alpha &lt;a:alpha&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.AlphaOffset &lt;a:alphaOff&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.AlphaModulation &lt;a:alphaMod&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Hue &lt;a:hue&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.HueOffset &lt;a:hueOff&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.HueModulation &lt;a:hueMod&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Saturation &lt;a:sat&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.SaturationOffset &lt;a:satOff&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.SaturationModulation &lt;a:satMod&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Luminance &lt;a:lum&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.LuminanceOffset &lt;a:lumOff&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.LuminanceModulation &lt;a:lumMod&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Red &lt;a:red&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.RedOffset &lt;a:redOff&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.RedModulation &lt;a:redMod&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Green &lt;a:green&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.GreenOffset &lt;a:greenOff&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.GreenModulation &lt;a:greenMod&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Blue &lt;a:blue&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.BlueOffset &lt;a:blueOff&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.BlueModulation &lt;a:blueMod&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.Gamma &lt;a:gamma&gt;</description></item><item><description>DocumentFormat.OpenXml.Drawing.InverseGamma &lt;a:invGamma&gt;</description></item></list></remarks>
    <remark>
      <para>The following table lists the possible child types:</para>
      <list type="bullet">
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Tint &lt;a:tint&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Shade &lt;a:shade&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Complement &lt;a:comp&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Inverse &lt;a:inv&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Gray &lt;a:gray&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Alpha &lt;a:alpha&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.AlphaOffset &lt;a:alphaOff&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.AlphaModulation &lt;a:alphaMod&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Hue &lt;a:hue&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.HueOffset &lt;a:hueOff&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.HueModulation &lt;a:hueMod&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Saturation &lt;a:sat&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.SaturationOffset &lt;a:satOff&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.SaturationModulation &lt;a:satMod&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Luminance &lt;a:lum&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.LuminanceOffset &lt;a:lumOff&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.LuminanceModulation &lt;a:lumMod&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Red &lt;a:red&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.RedOffset &lt;a:redOff&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.RedModulation &lt;a:redMod&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Green &lt;a:green&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.GreenOffset &lt;a:greenOff&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.GreenModulation &lt;a:greenMod&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Blue &lt;a:blue&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.BlueOffset &lt;a:blueOff&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.BlueModulation &lt;a:blueMod&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.Gamma &lt;a:gamma&gt;</description>
        </item>
        <item>
          <description>DocumentFormat.OpenXml.Drawing.InverseGamma &lt;a:invGamma&gt;</description>
        </item>
      </list>
    </remark>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the StyleColor class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleColor (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor" Usage="new DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>
            Initializes a new instance of the StyleColor class with the specified child elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleColor (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor" Usage="new DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>
            Initializes a new instance of the StyleColor class with the specified child elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleColor (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor : string -&gt; DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor" Usage="new DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>
            Initializes a new instance of the StyleColor class from outer XML.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="styleColor.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
        <summary>
            Creates a duplicate of this node.  
            </summary>
        <returns>Returns the cloned node. </returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Val { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Val" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor.Val" />
      <MemberSignature Language="VB.NET" Value="Public Property Val As StringValue" />
      <MemberSignature Language="F#" Value="member this.Val : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle.StyleColor.Val" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "val")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "val")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>val, this property is only available in Office2013, Office2016</para>
          <para>Represents the following attribute in the schema: val</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
