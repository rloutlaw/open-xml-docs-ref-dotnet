<Type Name="SeparatorChar" FullName="DocumentFormat.OpenXml.Math.SeparatorChar">
  <TypeSignature Language="C#" Value="public class SeparatorChar : DocumentFormat.OpenXml.Math.CharType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SeparatorChar extends DocumentFormat.OpenXml.Math.CharType" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Math.SeparatorChar" />
  <TypeSignature Language="VB.NET" Value="Public Class SeparatorChar&#xA;Inherits CharType" />
  <TypeSignature Language="F#" Value="type SeparatorChar = class&#xA;    inherit CharType" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.7.2.0</AssemblyVersion>
    <AssemblyVersion>2.8.1.0</AssemblyVersion>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.Math.CharType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(21, "sepChr")]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(21, "sepChr")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Delimiter Separator Character.</para>
      <para>This class is available in Office 2007 or above.</para>
      <para>When the object is serialized out as xml, it's qualified name is m:sepChr.</para>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlnoticeiso.md)] 
  
 **sepChr (Delimiter Separator Character)**  
  
 This element specifies the character that separates base arguments e in the delimiter object d. If this element is omitted, the default sepChr is '*&#124;*'. In other words, when the element is absent, the default is for the delimiter object separator character to be U+2502 ( DRAWINGS LIGHT VERTICAL).  
  
 When the element is present and the val attribute is absent, the default of the val attribute is empty which means the delimiter object separator character is absent.  
  
 [*Example*: Examples of d, each with a different sepChr, are: . The following example describes a separator character if :.  
  
```xml  
<m:dPr>  
  <m:sepChr val=&#0058/>  
</m:dPr>  
```  
  
 *end example*]  
  
|Parent Elements|  
|---------------------|  
|dPr (§22.1.2.31)|  
  
  [*Note*: The W3C XML Schema definition of this element’s content model (CT_Char) is located in §A.6.1. *end note*]  
  
 [!INCLUDE[openxmlnoticeiso](~/includes/openxmlcopyrightiso.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SeparatorChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.SeparatorChar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the SeparatorChar class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Math.SeparatorChar.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="separatorChar.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.7.2.0</AssemblyVersion>
        <AssemblyVersion>2.8.1.0</AssemblyVersion>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
        <summary>
            Creates a duplicate of this node.  
            </summary>
        <returns>Returns the cloned node. </returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
