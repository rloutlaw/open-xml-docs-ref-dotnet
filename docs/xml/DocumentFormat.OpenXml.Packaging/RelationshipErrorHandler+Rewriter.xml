<Type Name="RelationshipErrorHandler+Rewriter" FullName="DocumentFormat.OpenXml.Packaging.RelationshipErrorHandler+Rewriter">
  <TypeSignature Language="C#" Value="public delegate string RelationshipErrorHandler.Rewriter(Uri partUri, string id, string uri);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed RelationshipErrorHandler/Rewriter extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Packaging.RelationshipErrorHandler.Rewriter" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function RelationshipErrorHandler.Rewriter(partUri As Uri, id As String, uri As String) As String " />
  <TypeSignature Language="F#" Value="type RelationshipErrorHandler.Rewriter = delegate of Uri * string * string -&gt; string" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="partUri" Type="System.Uri" />
    <Parameter Name="id" Type="System.String" />
    <Parameter Name="uri" Type="System.String" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.String</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="partUri">Uri of the part with the invalid relationship.</param>
    <param name="id">Id of relationship</param>
    <param name="uri">Invalid <see cref="T:System.Uri" /></param>
    <summary>
            Delegate to be used for simple rewriting of malformed Uris.
            </summary>
    <returns>Rewritten string if available, otherwise <c>null</c>.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
