<Type Name="StateBasedHeader" FullName="DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader">
  <TypeSignature Language="C#" Value="public class StateBasedHeader : DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StateBasedHeader extends DocumentFormat.OpenXml.OpenXmlCompositeElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader" />
  <TypeSignature Language="VB.NET" Value="Public Class StateBasedHeader&#xA;Inherits OpenXmlCompositeElement" />
  <TypeSignature Language="F#" Value="type StateBasedHeader = class&#xA;    inherit OpenXmlCompositeElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlCompositeElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(83, "hdr")]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(83, "hdr")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Defines the StateBasedHeader Class.</para>
      <para>This class is available in Office 2016 or above.</para>
      <para>When the object is serialized out as xml, it's qualified name is xr:hdr.</para>
    </summary>
    <remarks>To be added.</remarks>
    <remark>
      <para>The following table lists the possible child types:</para>
      <list type="bullet">
        <item>
          <description>RefMap &lt;xr:refmap&gt;</description>
        </item>
      </list>
    </remark>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StateBasedHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the StateBasedHeader class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StateBasedHeader (params DocumentFormat.OpenXml.OpenXmlElement[] childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class DocumentFormat.OpenXml.OpenXmlElement[] childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray childElements As OpenXmlElement())" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader : DocumentFormat.OpenXml.OpenXmlElement[] -&gt; DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader" Usage="new DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="DocumentFormat.OpenXml.OpenXmlElement[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>
            Initializes a new instance of the StateBasedHeader class with the specified child elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StateBasedHeader (System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; childElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class DocumentFormat.OpenXml.OpenXmlElement&gt; childElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childElements As IEnumerable(Of OpenXmlElement))" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader : seq&lt;DocumentFormat.OpenXml.OpenXmlElement&gt; -&gt; DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader" Usage="new DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader childElements" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childElements" Type="System.Collections.Generic.IEnumerable&lt;DocumentFormat.OpenXml.OpenXmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="childElements">Specifies the child elements.</param>
        <summary>
            Initializes a new instance of the StateBasedHeader class with the specified child elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StateBasedHeader (string outerXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string outerXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerXml As String)" />
      <MemberSignature Language="F#" Value="new DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader : string -&gt; DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader" Usage="new DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader outerXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outerXml">Specifies the outer XML of the element.</param>
        <summary>
            Initializes a new instance of the StateBasedHeader class from outer XML.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="stateBasedHeader.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Eft">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.FeatureType&gt; Eft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2016.Excel.FeatureType&gt; Eft" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Eft" />
      <MemberSignature Language="VB.NET" Value="Public Property Eft As EnumValue(Of FeatureType)" />
      <MemberSignature Language="F#" Value="member this.Eft : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.FeatureType&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Eft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "eft")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "eft")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.FeatureType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>eft, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: eft</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Eftx">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.ExtFeatureType&gt; Eftx { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2016.Excel.ExtFeatureType&gt; Eftx" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Eftx" />
      <MemberSignature Language="VB.NET" Value="Public Property Eftx As EnumValue(Of ExtFeatureType)" />
      <MemberSignature Language="F#" Value="member this.Eftx : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.ExtFeatureType&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Eftx" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "eftx")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "eftx")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.ExtFeatureType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>eftx, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: eftx</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefMap">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.Office2016.Excel.RefMap RefMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.Office2016.Excel.RefMap RefMap" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.RefMap" />
      <MemberSignature Language="VB.NET" Value="Public Property RefMap As RefMap" />
      <MemberSignature Language="F#" Value="member this.RefMap : DocumentFormat.OpenXml.Office2016.Excel.RefMap with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.RefMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.Office2016.Excel.RefMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>RefMap.</para>
          <para>Represents the following element tag in the schema: xr:refmap.</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <remark>
            xmlns:xr = http://schemas.microsoft.com/office/spreadsheetml/2014/revision
            </remark>
      </Docs>
    </Member>
    <Member MemberName="Seft">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.SubFeatureType&gt; Seft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2016.Excel.SubFeatureType&gt; Seft" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Seft" />
      <MemberSignature Language="VB.NET" Value="Public Property Seft As EnumValue(Of SubFeatureType)" />
      <MemberSignature Language="F#" Value="member this.Seft : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.SubFeatureType&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Seft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "seft")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "seft")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.SubFeatureType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>seft, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: seft</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seftx">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.ExtSubFeatureType&gt; Seftx { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2016.Excel.ExtSubFeatureType&gt; Seftx" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Seftx" />
      <MemberSignature Language="VB.NET" Value="Public Property Seftx As EnumValue(Of ExtSubFeatureType)" />
      <MemberSignature Language="F#" Value="member this.Seftx : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.ExtSubFeatureType&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Seftx" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "seftx")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "seftx")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.ExtSubFeatureType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>seftx, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: seftx</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue Uid" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As StringValue" />
      <MemberSignature Language="F#" Value="member this.Uid : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.StateBasedHeader.Uid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "uid")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "uid")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>uid, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: uid</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
