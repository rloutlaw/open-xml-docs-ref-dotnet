<Type Name="RefTest" FullName="DocumentFormat.OpenXml.Office2016.Excel.RefTest">
  <TypeSignature Language="C#" Value="public class RefTest : DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RefTest extends DocumentFormat.OpenXml.OpenXmlLeafElement" />
  <TypeSignature Language="DocId" Value="T:DocumentFormat.OpenXml.Office2016.Excel.RefTest" />
  <TypeSignature Language="VB.NET" Value="Public Class RefTest&#xA;Inherits OpenXmlLeafElement" />
  <TypeSignature Language="F#" Value="type RefTest = class&#xA;    inherit OpenXmlLeafElement" />
  <AssemblyInfo>
    <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>DocumentFormat.OpenXml.OpenXmlLeafElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(83, "test")]</AttributeName>
      <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(83, "test")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Defines the RefTest Class.</para>
      <para>This class is available in Office 2016 or above.</para>
      <para>When the object is serialized out as xml, it's qualified name is xr:test.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RefTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2016.Excel.RefTest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the RefTest class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ajt">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.AdjustType&gt; Ajt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2016.Excel.AdjustType&gt; Ajt" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.RefTest.Ajt" />
      <MemberSignature Language="VB.NET" Value="Public Property Ajt As EnumValue(Of AdjustType)" />
      <MemberSignature Language="F#" Value="member this.Ajt : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.AdjustType&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.RefTest.Ajt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "ajt")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "ajt")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.AdjustType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>ajt, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: ajt</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ajtx">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.AdjustTypeExt&gt; Ajtx { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.EnumValue`1&lt;valuetype DocumentFormat.OpenXml.Office2016.Excel.AdjustTypeExt&gt; Ajtx" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.RefTest.Ajtx" />
      <MemberSignature Language="VB.NET" Value="Public Property Ajtx As EnumValue(Of AdjustTypeExt)" />
      <MemberSignature Language="F#" Value="member this.Ajtx : DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.AdjustTypeExt&gt; with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.RefTest.Ajtx" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "ajtx")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "ajtx")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.EnumValue&lt;DocumentFormat.OpenXml.Office2016.Excel.AdjustTypeExt&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>ajtx, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: ajtx</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override DocumentFormat.OpenXml.OpenXmlElement CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class DocumentFormat.OpenXml.OpenXmlElement CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:DocumentFormat.OpenXml.Office2016.Excel.RefTest.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As OpenXmlElement" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; DocumentFormat.OpenXml.OpenXmlElement" Usage="refTest.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.OpenXmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HomeRef">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.BooleanValue HomeRef { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.BooleanValue HomeRef" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.RefTest.HomeRef" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRef As BooleanValue" />
      <MemberSignature Language="F#" Value="member this.HomeRef : DocumentFormat.OpenXml.BooleanValue with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.RefTest.HomeRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "homeRef")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "homeRef")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.BooleanValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>homeRef, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: homeRef</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="N">
      <MemberSignature Language="C#" Value="public DocumentFormat.OpenXml.StringValue N { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class DocumentFormat.OpenXml.StringValue N" />
      <MemberSignature Language="DocId" Value="P:DocumentFormat.OpenXml.Office2016.Excel.RefTest.N" />
      <MemberSignature Language="VB.NET" Value="Public Property N As StringValue" />
      <MemberSignature Language="F#" Value="member this.N : DocumentFormat.OpenXml.StringValue with get, set" Usage="DocumentFormat.OpenXml.Office2016.Excel.RefTest.N" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>DocumentFormat.OpenXml</AssemblyName>
        <AssemblyVersion>2.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[DocumentFormat.OpenXml.SchemaAttr(0, "n")]</AttributeName>
          <AttributeName Language="F#">[&lt;DocumentFormat.OpenXml.SchemaAttr(0, "n")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>DocumentFormat.OpenXml.StringValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>n, this property is only available in Office2016</para>
          <para>Represents the following attribute in the schema: n</para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
